<html>

<head>
    <link rel="stylesheet" href="app.css">
    <script src="app2.js"></script>
</head>

<body>
    <button id="volUp" onclick="doButton(this);">volup</button>
    <button id="volDown" onclick="doButton(this);">voldown</button>
    <button id="prevStation" onclick="doButton(this);">prev station</button>
    <button id="nextStation" onclick="doButton(this);">next station</button>


    <br>
    <label id="statidx">-</label> :
    <label id="stat">-</label><br>
    <label id="title">-</label><br>
    <label id="vol">-</label><br>
    <select id="stationselect" onchange="handleSelect(this);"/>


</body>
<script>
    // generic
    window.addEventListener('load', onLoad);

    function onLoad(event) {
        setTimeout(initWebSocket, 100);
        setTimeout(loadSettings, 100);
    }

    function loadSettings() {
        getJsonFromApi('http://webradio.local/stations',
            function (err, data) {

                if (err !== null) {
                    console.log('could not load stations: ' + err);
                } else {
                    console.log(data);
                    fillStationSelector("stationselect", data.stations)

                }
            });

    }

    function fillStationSelector(selectId, data) {
        let selector = document.getElementById('stationselect');
        for (element in data) {
            var opt = document.createElement("option");
            opt.value = data[element];
            opt.innerHTML = data[element]; // whatever property it has

            // then append it to the select element
            selector.appendChild(opt);
        }

    }

    function getJsonFromApi(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'json';
        xhr.onload = function () {
            var status = xhr.status;
            if (status === 200) {
                callback(null, xhr.response);
            } else {
                callback(status, xhr.response);
            }
        };
        xhr.send();
    };

    function handleSelect(object){
        id = object.id;
        value = object.value;
        sendWsMessage("playstream " + value);

    }

    function doButton(object) {
        sendWsMessage(object.id);
    }

    function handleJsonMessage(jsonObject) {
        if (jsonObject.hasOwnProperty('temp1')) {
            polyLineString += GetValueString(jsonObject.daysecond, jsonObject.temp1);
            this.graph.setPolyLine(polyLineString);
        }
    }

    function handleInfo(info) {
        lines = info.split('\n');
        lines.forEach(line => {
            if (line.split(/icy-name:/i)[1] != undefined) document.getElementById("station").innerHTML = line.split(/icy-name:/i)[1];

            if (line.split(/StreamTitle=/i)[1] != undefined) document.getElementById("title").innerHTML = line.split(/StreamTitle=/i)[1];
        });


    }


    //#region Websockets
    var gateway = `ws://${window.location.hostname}/ws`;

    var websocket;

    function initWebSocket() {

        if (window.location.hostname == "127.0.0.1") gateway = "ws://webradio.local/ws"; // little trick to get offline htm working

        console.log(`Trying to open a WebSocket connection ${gateway} ...`);

        websocket = new WebSocket(gateway);
        websocket.onopen = onOpen;
        websocket.onclose = onClose;
        websocket.onmessage = onMessage; // <-- add this line
    }

    function onOpen(event) {
        console.log('Connection opened');
    }

    function onClose(event) {
        console.log('Connection closed');
        setTimeout(initWebSocket, 2000);
    }

    function onMessage(event) {
        //document.getElementById("status").value = event.data;

        //handleInfo(event.data);
        let jsonObject = JSON.parse(event.data)
        if (jsonObject) {
            console.log("valid json !");
            for (const key in jsonObject) {
                if (jsonObject.hasOwnProperty(key)) {
                    console.log(`${key} : ${jsonObject[key]}`)
                    if (document.getElementById(key)) document.getElementById(key).innerHTML = jsonObject[key];
                }
            }

        }
        //handleJsonMessage(jsonObject);
    }

    function sendWsMessage(message) {
        websocket.send(message);
    }
        //#endregion


</script>

</html>